import BackBtn from "@/components/BackBtn/BackBtn";
import Logo from "@/components/LogoBanner/LogoBanner";
import { GetStaticPaths, GetStaticProps } from "next";
import Head from "next/head";
import React, { FC } from "react";
import { ProductsInterface } from "@/interfaces/ProductsInterface";
import { CategoryInterface } from "@/interfaces/CategoryInterface";
import { CompanyInterface } from "@/interfaces/CompanyInterface";
import ProductsList from "@/components/ProductsList/ProductsList";

interface Props {
  products: ProductsInterface[];
  category: CategoryInterface[];
  company: CompanyInterface;
}
const CategoryPage: FC<Props> = ({ products, category, company }) => {
  return (
    <>
      <Head>
        <title>Desserts</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Logo company={company} />
        <BackBtn />
        <ProductsList products={products} category={category} company={company} />
      </main>
    </>
  );
};

export const getStaticPaths: GetStaticPaths = async () => {
  const res = await fetch(`https://nomad-cloud.in/api/categorieForProducts`);
  const [products]: CategoryInterface[] = await res.json();

  const paths = [products].map((p: { id: { toString: () => any } }) => ({
    params: {
      id: p.id.toString(),
    },
  }));

  return {
    paths,
    fallback: true,
  };
};
export const getStaticProps: GetStaticProps = async ({ params }) => {
  if (params && params.id) {
    const res = await fetch(
      `https://nomad-cloud.in/api/categorieForProducts/${params.id}`
    );
    const products = await res.json();
    const resCategory = await fetch(`https://nomad-cloud.in/api/menu`);
    const resCompany = await fetch(`https://nomad-cloud.in/api/companie`);
    const company = await resCompany.json();

    const category = await resCategory.json();
    if (Object.keys(products).length === 0) {
      return {
        notFound: true,
      };
    }

    return {
      props: {
        products,
        company,
       category,
      },
    };
  }

  return {
    notFound: true,
  };
};

export default CategoryPage;
